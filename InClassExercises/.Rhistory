theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#D55E00", "#CC79A7")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#A93226 ", "#CC79A7")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#C0392B", "#CC79A7")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#E53A07", "#CC79A7")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#E53A07", "#F39C12")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()+scale_fill_manual(values =custom.col)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#E53A07", "#F39C12")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
diamonds %>%
ggplot(aes(x = clarity, y = price)) +
geom_violin(aes(fill = clarity))
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()
ggplot(diamonds, aes(x=depth, y=price, color=clarity)) + geom_point()
ggplot(diamonds, aes(x=table, y=price, color=clarity)) + geom_point()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()
function (data = NULL, mapping = aes(), ..., environment = parent.frame())
ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()
ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()
plota<-ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()
plotb<-ggplot(diamonds, aes(x=depth, y=price, color=clarity)) + geom_point()
plotc<-ggplot(diamonds, aes(x=table, y=price, color=clarity)) + geom_point()
plotd<-ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()
plot_grid(plota, plotb,plotc,plotd, labels = "AUTO")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)+labs(x="Cut", y="Count",title="Number of Diamonds for Diffent Cuts and Clarities")
diamonds %>%
ggplot(aes(x = clarity, y = price)) +
geom_violin(aes(fill = clarity))+labs(x="Cut", y="Count",title="Number of Diamonds for Diffent Cuts and Clarities")
diamonds %>%
ggplot(aes(x = clarity, y = price)) +
geom_violin(aes(fill = clarity))
diamonds %>%
ggplot(aes(x = clarity, y = price)) +
geom_violin(aes(fill = clarity))+labs(x="Clarity", y="Price",title="The Relation Between Clarity and Price")
plota<-ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()
plotb<-ggplot(diamonds, aes(x=depth, y=price, color=clarity)) + geom_point()
plotc<-ggplot(diamonds, aes(x=table, y=price, color=clarity)) + geom_point()
plotd<-ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()
plot_grid(plota, plotb,plotc,plotd, labels = "AUTO")
plota<-ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Carat and Price")
plotb<-ggplot(diamonds, aes(x=depth, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Depth and Price")
plotc<-ggplot(diamonds, aes(x=table, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Table and Price")
plotd<-ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Cut and Price")
plot_grid(plota, plotb,plotc,plotd, labels = "AUTO")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)+labs(x="Cut", y="Count",title="Number of Diamonds for Different Cuts and Clarities")
plot1<- ggplot(diamonds, aes(x =x, y = price,color=clarity)) +
geom_point() + theme_bw()
plot2 <- ggplot(diamonds, aes(x = y, y=price,color=clarity)) +
geom_point() + theme_bw()
plot3 <- ggplot(diamonds, aes(x = z, y=price,color=clarity)) +
geom_point() + theme_bw()
plot_grid(plot1, plot2,plot3, labels = "AUTO")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "fill") +
ylab("Proportion")
ggplot(diamonds,aes(x=cut,fill=color))+geom_bar()
ggplot(diamonds,aes(x=price))+geom_density(aes(fill=factor(cut)),alpha=0.7)+labs(title="Price grouped by cut",x="Price",fill="Cut")
#Model on train
diamonds_model1 <- rpart(price~carat+color+table, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on test
diamonds_model2 <- rpart(price~carat+color+table, data=diamonds_test)
fancyRpartPlot(diamonds_model2)
prediction_test<- predict(diamonds_model2)
print(head(prediction_test))
prediction_test<-as.data.frame(prediction_test)
test_analysis<- diamonds_test%>%mutate(price,prediction_test)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
test_analysis<-test_analysis%>%rename(prediction=prediction_test)
test_analysis$error2<-(test_analysis$price-test_analysis$prediction)^2
test_analysis2<-test_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortest=sum(test_analysis2$error)
totalerrortest
rss<-sum((test_analysis$price-test_analysis$prediction)^2)
sstol<- sum((test_analysis$price - mean(test_analysis$price))^2)
rsquared2<-(1-(rss/sstol))
rsquared2
#Model on test using train data
main_prediction<-predict(diamonds_model1,newdata =diamonds_test)
print(head(main_prediction))
main_prediction<-as.data.frame(main_prediction)
main_analysis<- diamonds_test%>% mutate(price,main_prediction)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
main_analysis<-main_analysis%>%rename(prediction=main_prediction)
main_analysis$error2<-(main_analysis$price-main_analysis$prediction)^2
main_analysis1<-main_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrormain=sum(main_analysis1$error)
totalerrormain
rss<-sum((main_analysis$price-main_analysis$prediction)^2)
sstol<- sum((main_analysis$price - mean(main_analysis$price))^2)
rsquared3<-(1-(rss/sstol))
rsquared3
# Improving model with PCA Analysis
view(diamonds)
summary(diamonds[,1:7])
# Correlation Matrix
traindata<-diamonds_train[,-c(2,3,4,7)]
testdata<-diamonds_test[,-c(2,3,4,7)]
cor(traindata)
#Do PCA with princomp function and use correlation matrix to create components
survey_pca <- princomp(as.matrix(traindata),cor=T)
summary(survey_pca,loadings=TRUE)
# As you can clearly see, the first 2 PC is responsible for 86% of the variation. First PC considers carath, price,x,y and z as positive effects, second PC is highly affected by depth. With the third PC, 96.3% of the variation is explained.
# Visualizaton of PCA
ggplot(data.frame(pc=1:6,cum_var=c(0.6576033,0.8718448,0.9856141,0.994345054,0.998921958,1.00000000)),aes(x=pc,y=cum_var)) + geom_point() + geom_line()
pca_train<-princomp(as.matrix(traindata),cor=T)
pca_test<-princomp(as.matrix(testdata),cor=T)
summary(pca_train,loadings=TRUE)
# Model with PCA
pca_traindata<-cbind(diamonds_train,pca_train$scores[,1:3])
pca_testdata<-cbind(diamonds_test,pca_test$scores[,1:3])
model<- rpart(price ~ Comp.1 + Comp.2+Comp.3, data=pca_traindata)
fancyRpartPlot(model)
main_predictionpca<-predict(model,newdata =pca_testdata)
print(head(main_predictionpca))
main_predictionpca<-as.data.frame(main_predictionpca)
main_analysispca<- pca_testdata%>% mutate(price,main_predictionpca)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z,-Comp.1,-Comp.2,-Comp.3)
main_analysispca$error2<-(main_analysispca$price-main_analysispca$main_predictionpca)^2
main_analysis3<-main_analysispca%>%group_by(main_predictionpca)%>%summarise(error=min(error2))
totalerrormain=sum(main_analysis3$error)
totalerrormain
rss<-sum((main_analysispca$price-main_analysispca$main_predictionpca)^2)
sstol<- sum((main_analysispca$price - mean(main_analysispca$price))^2)
rsquared4<-(1-(rss/sstol))
rsquared4
ggplot(diamonds,aes(x=cut,fill=color))+geom_bar()
library(tidyverse)
library(dplyr)
library(ggplot2)
library(broom)
library(rpart) #To construct CART models
library(rpart.plot) # It also includes titanic data
library(rattle)
library(cowplot)
set.seed(503)
diamonds_test <- diamonds %>% mutate(diamond_id = row_number()) %>%
group_by(cut, color, clarity) %>% sample_frac(0.2) %>% ungroup()
diamonds_train <- anti_join(diamonds %>% mutate(diamond_id = row_number()),
diamonds_test, by = "diamond_id")
diamonds_train<-diamonds_train%>% select(-diamond_id)
diamonds_test<-diamonds_test%>% select(-diamond_id)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#E53A07", "#F39C12")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)+labs(x="Cut", y="Count",title="Number of Diamonds for Different Cuts and Clarities")
diamonds %>%
ggplot(aes(x = clarity, y = price)) +
geom_violin(aes(fill = clarity))+labs(x="Clarity", y="Price",title="The Relation Between Clarity and Price")
plota<-ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Carat and Price")
plotb<-ggplot(diamonds, aes(x=depth, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Depth and Price")
plotc<-ggplot(diamonds, aes(x=table, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Table and Price")
plotd<-ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Cut and Price")
plot_grid(plota, plotb,plotc,plotd, labels = "AUTO")
plot1<- ggplot(diamonds, aes(x =x, y = price,color=clarity)) +
geom_point() + theme_bw(plot.title = element_text(size=12))+labs(x="X", y="Price",title="The Relation Between X and Price")
plot2 <- ggplot(diamonds, aes(x = y, y=price,color=clarity)) +
geom_point() + theme_bw(plot.title = element_text(size=12)) +labs(x="Y", y="Price",title="The Relation Between X and Price")
plot3 <- ggplot(diamonds, aes(x = z, y=price,color=clarity)) +
geom_point() + theme_bw(plot.title = element_text(size=12)) +labs(x="Z", y="Price",title="The Relation Between X and Price")
plot_grid(plot1, plot2,plot3, labels = "AUTO")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "fill") +
ylab("Proportion")
ggplot(diamonds,aes(x=cut,fill=color))+geom_bar()
# Correlation Matrix
traindata<-diamonds_train[,-c(2,3,4,7)]
testdata<-diamonds_test[,-c(2,3,4,7)]
cor(traindata)
#Do PCA with princomp function and use correlation matrix to create components
survey_pca <- princomp(as.matrix(traindata),cor=T)
summary(survey_pca,loadings=TRUE)
# As you can clearly see, the first 2 PC is responsible for 86% of the variation. First PC considers carath, price,x,y and z as positive effects, second PC is highly affected by depth. With the third PC, 96.3% of the variation is explained.
# Visualizaton of PCA
ggplot(data.frame(pc=1:6,cum_var=c(0.6576033,0.8718448,0.9856141,0.994345054,0.998921958,1.00000000)),aes(x=pc,y=cum_var)) + geom_point() + geom_line()
pca_train<-princomp(as.matrix(traindata),cor=T)
pca_test<-princomp(as.matrix(testdata),cor=T)
summary(pca_train,loadings=TRUE)
# Correlation Matrix
traindata<-diamonds_train[,-c(2,3,4,7)]
testdata<-diamonds_test[,-c(2,3,4,7)]
cor(traindata)
# As you can clearly see, the first 2 PC is responsible for 86% of the variation. First PC considers carath, price,x,y and z as positive effects, second PC is highly affected by depth. With the third PC, 96.3% of the variation is explained.
# Visualizaton of PCA
ggplot(data.frame(pc=1:6,cum_var=c(0.6576033,0.8718448,0.9856141,0.994345054,0.998921958,1.00000000)),aes(x=pc,y=cum_var)) + geom_point() + geom_line()
pca_train<-princomp(as.matrix(traindata),cor=T)
pca_test<-princomp(as.matrix(testdata),cor=T)
summary(pca_train,loadings=TRUE)
View(diamonds_model2)
View(diamonds_test2)
View(diamonds_model1)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(broom)
library(rpart) #To construct CART models
library(rpart.plot) # It also includes titanic data
library(rattle)
library(cowplot)
set.seed(503)
diamonds_test <- diamonds %>% mutate(diamond_id = row_number()) %>%
group_by(cut, color, clarity) %>% sample_frac(0.2) %>% ungroup()
diamonds_train <- anti_join(diamonds %>% mutate(diamond_id = row_number()),
diamonds_test, by = "diamond_id")
diamonds_train<-diamonds_train%>% select(-diamond_id)
diamonds_test<-diamonds_test%>% select(-diamond_id)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#E53A07", "#F39C12")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))+scale_fill_manual(values =custom.col)+labs(x="Cut", y="Count",title="Number of Diamonds for Different Cuts and Clarities")
diamonds %>%
ggplot(aes(x = clarity, y = price)) +
geom_violin(aes(fill = clarity))+labs(x="Clarity", y="Price",title="The Relation Between Clarity and Price")
plota<-ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Carat and Price")
plotb<-ggplot(diamonds, aes(x=depth, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Depth and Price")
plotc<-ggplot(diamonds, aes(x=table, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Table and Price")
plotd<-ggplot(diamonds, aes(x=cut, y=price, color=clarity)) + geom_point()+labs(x="Clarity", y="Price",title="The Relation Between Cut and Price")
plot_grid(plota, plotb,plotc,plotd, labels = "AUTO")
plot1<- ggplot(diamonds, aes(x =x, y = price,color=clarity)) +
geom_point() + theme_bw()
plot2 <- ggplot(diamonds, aes(x = y, y=price,color=clarity)) +
geom_point() + theme_bw()
plot3 <- ggplot(diamonds, aes(x = z, y=price,color=clarity)) +
geom_point() + theme_bw()
plot_grid(plot1, plot2,plot3, labels = "AUTO")
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "fill") +
ylab("Proportion")
ggplot(diamonds,aes(x=cut,fill=color))+geom_bar()
ggplot(diamonds,aes(x=price))+geom_density(aes(fill=factor(cut)),alpha=0.7)+labs(title="Price grouped by cut",x="Price",fill="Cut")
#Model on train
diamonds_model1 <- rpart(price~carat+color+cut, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~table+color+cut, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~carat+table+cut, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
View(testdata)
View(diamonds_test)
#Model on train
diamonds_model1 <- rpart(price~carat+clarity+cut, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~depth+cut, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
View(diamonds_train)
#Model on train
diamonds_model1 <- rpart(price~depth+cut+table, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~depth+cut+table+carat, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~depth+cut+table+clarity, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~depth+cut+table+clarity+color, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
#Model on train
diamonds_model1 <- rpart(price~depth+cut+table+clarity+x, data=diamonds_train)
fancyRpartPlot(diamonds_model1)
prediction_train<- predict(diamonds_model1)
print(head(prediction_train))
prediction_train<-as.data.frame(prediction_train)
train_analysis<- diamonds_train%>%mutate(price,prediction_train)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z)
train_analysis<-train_analysis%>%rename(prediction=prediction_train)
train_analysis$error2<-(train_analysis$price-train_analysis$prediction)^2
train_analysis1<-train_analysis%>%group_by(prediction)%>%summarise(error=min(error2))
totalerrortrain=sum(train_analysis1$error)
totalerrortrain
rss<-sum((train_analysis$price-train_analysis$prediction)^2)
sstol<- sum((train_analysis$price - mean(train_analysis$price))^2)
rsquared1<-(1-(rss/sstol))
rsquared1
library(tidyverse)
library(dplyr)
library(ggplot2)
library(broom)
library(rpart) #To construct CART models
library(rpart.plot) # It also includes titanic data
library(rattle)
library(cowplot)
set.seed(503)
diamonds_test <- diamonds %>% mutate(diamond_id = row_number()) %>%
group_by(cut, color, clarity) %>% sample_frac(0.2) %>% ungroup()
diamonds_train <- anti_join(diamonds %>% mutate(diamond_id = row_number()),
diamonds_test, by = "diamond_id")
diamonds_train<-diamonds_train%>% select(-diamond_id)
diamonds_test<-diamonds_test%>% select(-diamond_id)
#EDA
custom.col <- c("#000000", "#58D68D", "#8E44AD", "#FCFF33",
"#F14CDA", "#0CC3F6", "#E53A07", "#F39C12")
# Improving model with PCA Analysis
view(diamonds)
summary(diamonds[,1:7])
# Correlation Matrix
traindata<-diamonds_train[,-c(2,3,4,7)]
testdata<-diamonds_test[,-c(2,3,4,7)]
cor(traindata)
#Do PCA with princomp function and use correlation matrix to create components
survey_pca <- princomp(as.matrix(traindata),cor=T)
summary(survey_pca,loadings=TRUE)
# As you can clearly see, the first 2 PC is responsible for 86% of the variation. First PC considers carath, price,x,y and z as positive effects, second PC is highly affected by depth. With the third PC, 96.3% of the variation is explained.
# Visualizaton of PCA
ggplot(data.frame(pc=1:6,cum_var=c(0.6576033,0.8718448,0.9856141,0.994345054,0.998921958,1.00000000)),aes(x=pc,y=cum_var)) + geom_point() + geom_line()
pca_train<-princomp(as.matrix(traindata),cor=T)
pca_test<-princomp(as.matrix(testdata),cor=T)
summary(pca_train,loadings=TRUE)
# Model with PCA
pca_traindata<-cbind(diamonds_train,pca_train$scores[,1:3])
pca_testdata<-cbind(diamonds_test,pca_test$scores[,1:3])
model<- rpart(price ~ Comp.1 + Comp.2+Comp.3, data=pca_traindata)
fancyRpartPlot(model)
main_predictionpca<-predict(model,newdata =pca_testdata)
print(head(main_predictionpca))
main_predictionpca<-as.data.frame(main_predictionpca)
main_analysispca<- pca_testdata%>% mutate(price,main_predictionpca)%>%
select(-carat,-cut,-color,-clarity,-depth,-table,-x,-y,-z,-Comp.1,-Comp.2,-Comp.3)
main_analysispca$error2<-(main_analysispca$price-main_analysispca$main_predictionpca)^2
main_analysis3<-main_analysispca%>%group_by(main_predictionpca)%>%summarise(error=min(error2))
totalerrormain=sum(main_analysis3$error)
totalerrormain
rss<-sum((main_analysispca$price-main_analysispca$main_predictionpca)^2)
sstol<- sum((main_analysispca$price - mean(main_analysispca$price))^2)
rsquared4<-(1-(rss/sstol))
rsquared4
View(diamonds_test)
shiny::runApp('GitHub/boun01-Suheylaseker/InClassExercises')
runApp('GitHub/boun01-Suheylaseker/InClassExercises')
